---
import type { CollectionEntry } from "astro:content"
import { getCollection } from "astro:content"
import BaseLayout from "../../layouts/base.astro"

export async function getStaticPaths() {
    const allPosts = await getCollection("post")
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ]

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((b) => b.data.tags.includes(tag))
        return {
            params: { tag },
            props: { posts: filteredPosts },
        }
    })
}

interface Props {
    posts: CollectionEntry<"post">[]
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<BaseLayout title={tag}>
    <p>Posts tagged with {tag}</p>{tag}
    {
        posts.map((post) => {
            return (
                <div class="post">
                    <h2>
                        <a href={`/posts/${post.slug}`}>{post.data.title}</a>
                    </h2>

                    <time datetime={post.data.publishDate.toISOString()}>
                        {post.data.publishDate.toDateString()}
                    </time>

                    <p>{post.data.description}</p>
                    <a href={`/posts/${post.slug}`}>read</a>
                </div>
            )
        })
    }
</BaseLayout>
